name: Create New Sprint Branch

on:
    workflow_dispatch:
        inputs:
            branch_name:
                description: "The branch name to create (e.g., sprint/feature-x)"
                required: true
                default: "A_A"

permissions:
    contents: write   # Grant write permissions for content (required for pushing new branches)

jobs:
    create_branch:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}  # Use default GitHub token for checking out the repo

            # Step 2: Set up Git for branch creation
            - name: Set up Git
              run: |
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git config --global user.name "GitHub Actions Bot"

            # Step 3: Fetch and create a new branch based on the default branch
            - name: Fetch and create a new branch
              env: # Set the GH_TOKEN environment variable here
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the default GitHub token
              run: |
                  # Fetch the default branch name
                  DEFAULT_BRANCH=$(gh api "/repos/${{ github.repository }}" --jq '.default_branch')

                  # Extract the branch name from the input parameter
                  BRANCH_NAME="sprint/${{ github.event.inputs.branch_name }}"

                  git fetch origin
                  git checkout -b "$BRANCH_NAME" origin/main      

                  # Push the newly created branch to the repository
                  git push origin "$BRANCH_NAME"
                  
                  # Set the default branch as an environment variable for later steps
                  echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

            # Step 4: Set the new branch as the default
            - name: Set new branch as default
              run: |
                  # Set the new branch as the default branch
                  gh api -X PATCH \
                    -H "Accept: application/vnd.github.v3+json" \
                    "/repos/${{ github.repository }}" \
                    -f default_branch=sprint/${{ github.event.inputs.branch_name }}
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}  # Use PAT instead of the default GitHub token

            # Step 5: Update base branch of PRs
            - name: Update base branch of PRs
              run: |
                  repo="${{ github.repository }}"
                  newbranch="sprint/${{ github.event.inputs.branch_name }}"

                  # Update all PRs with the previous default branch as their base
                  for num in $(gh pr list -B "${{ env.DEFAULT_BRANCH }}" --json number -q '.[].number'); do
                      gh api -X PATCH "repos/${repo}/pulls/${num}" -f base="$newbranch"
                  done
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}  # Use PAT to authenticate GitHub API
